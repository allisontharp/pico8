pico-8 cartridge // http://www.pico-8.com
version 42
__lua__
max_fish_speed = 1
max_sprite = 5
max_enemies = 10
max_screen = 128
dbug = false
test_hitbox = false

function _init()
	MENUITEM(1, "FOO",
	MENUITEM(1, "RESTART PUZZLE",
  FUNCTION() restart_game() SFX(10) END
	)
	show_start_screen()
end

function _draw()
	_drw()
end

function _update()
	_upd()
end

function init()
	score = 0
	ani = 1
	p_speed = 1
	init_fishes()
	init_bubbles()
end

-->8
-- fish
evolution = {
	spr = 0,
	xp_to_evolve = 0,
	hitbox = {
		off_x = 0,
		off_y = 0,
		w = 1,
		h = 1
	},
	evolution_number = 0,

	new = function(self, tbl)
		tbl = tbl or {}
		setmetatable(
			tbl, {
				__index = self
			}
		)
		return tbl
	end
}
fish = {
	x = 0,
	y = flr(rnd(max_screen)),
	dx = rnd(max_fish_speed - 0.5),
	dy = 0,
	clr = 0,
	evolution = minnow,
	flip = false,

	new = function(self, tbl)
		tbl = tbl or {}
		setmetatable(
			tbl, {
				__index = self
			}
		)

		tbl.clr = flr(rnd(16))
		if tbl.clr == 1 or tbl.clr == 12 then
			tbl.clr = 3
		end

		tbl.x = 0
		if flr(rnd(1) * 100) % 2 == 0 then
			tbl.x = max_screen
		end
		if tbl.dx <= 0.1 then tbl.dx = 0.1 end
		if tbl.x == max_screen then
			tbl.dx *= -1
			tbl.flip = true
		end
		return tbl
	end,

	update = function(self)
		self.x += self.dx
		self.y += self.dy

		if self.x <= 0 or self.y <= 0
				or self.x >= max_screen or self.y >= max_screen then
			del(fishes, self)
		end
		check_col(self)
	end,

	draw = function(self)
		pal(9, self.clr)
		-- animate
		local s = self.evolution.spr
		if ani >= 2 then
			s += 16
		end
		-- sprite widths
		local w = 1
		local h = 1
		if self.evolution.spr >= 5 then
			w = 2
		end
		spr(s, self.x, self.y, w, h, self.flip)
		pal()
	end
}

player = fish:new({
	xp = 0,
	evolution = minnow,
	update = function(self, tbl)
		tbl = bubble.new(self, tbl)
		self.x += self.dx
		self.y += self.dy
		if self.x <= 0 then
			self.x = max_screen - 5
		elseif self.x >= max_screen then
			self.x = 0 + 5
		end

		return tbl
	end
})

minnow = evolution:new({
	spr = 1,
	evolution_number = 1,
	xp_to_evolve = 2,
	hitbox = {
		off_x = 2,
		off_y = 2,
		w = 1,
		h = 1
	}
})

plip = evolution:new({
	spr = 2,
	evolution_number = 2,
	xp_to_evolve = 4,
	hitbox = {
		off_x = 2,
		off_y = 2,
		w = 2,
		h = 3
	}
})

nibbler = evolution:new({
	spr = 3,
	evolution_number = 3,
	xp_to_evolve = 5,
	hitbox = {
		off_x = 0,
		off_y = 1,
		w = 4,
		h = 3
	}
})

munchler = evolution:new({
	spr = 4,
	evolution_number = 4,
	xp_to_evolve = 7,
	hitbox = {
		off_x = 0,
		off_y = 0,
		w = 8,
		h = 8
	}
})

gulp = evolution:new({
	spr = 5,
	evolution_number = 5,
	xp_to_evolve = 10,
	hitbox = {
		off_x = 0,
		off_y = 0,
		w = 16,
		h = 8
	}
})

-- not implemented yet lol
devourer = evolution:new({
	spr = 6,
	evolution_number = 6,
	xp_to_evolve = 50,
	hitbox = {
		off_x = 0,
		off_y = 0,
		w = 16,
		h = 8
	}
})

function init_fishes()
	fishes = {}
	evolution_types = {
		minnow,
		plip,
		nibbler,
		munchler,
		gulp
	}

	player = player:new({
		x = 15,
		y = 15,
		xp = 0,
		evolution = minnow
	})

	add(
		fishes, player
	)
end

function add_new_fish()
	local sprite_num = 1 + flr(rnd(player.evolution.spr + 2))
	if sprite_num > max_sprite then
		sprite_num = max_sprite
	end
	local evolution_type = evolution_types[sprite_num]
	add(
		fishes, fish:new({
			evolution = evolution_type,
			y = rnd(127)
		})
	)
end

-->8
-- collision
function check_col(f)
	f_right = f.x + f.evolution.hitbox.off_x + f.evolution.hitbox.w
	f_left = f.x + f.evolution.hitbox.off_x
	f_top = f.y + f.evolution.hitbox.off_y
	f_bottom = f.y + f.evolution.hitbox.off_y + f.evolution.hitbox.h

	p_right = player.x + player.evolution.hitbox.off_x + player.evolution.hitbox.w
	p_left = player.x + player.evolution.hitbox.off_x
	p_top = player.y + player.evolution.hitbox.off_y
	p_bottom = player.y + player.evolution.hitbox.off_y + player.evolution.hitbox.h

	if f_right >= p_left and f_left <= p_right
			and f_bottom >= p_top and f_top <= p_bottom then
		debug("collisision")
		debug("fish")
		debug("\tright: " .. f_right .. " left: " .. f_left .. " top: " .. f_top .. " bottom: " .. f_bottom)
		debug("player" .. player.evolution.spr)
		debug("\tright: " .. p_right .. " left: " .. p_left .. " top: " .. p_top .. " bottom: " .. p_bottom)
		debug("\tx: " .. player.x .. " hitbox off_x: " .. player.evolution.hitbox.off_x)
		debug("\ty: " .. player.y .. " hitbox off_y: " .. player.evolution.hitbox.off_y .. " h: " .. player.evolution.hitbox.h)
		if f.evolution.spr <= player.evolution.spr then
			sfx(0)
			score += 1
			if player.xp < player.evolution.xp_to_evolve then
				player.xp += 1
			end

			if player.evolution.spr == max_sprite then
				show_win_screen()
			end
			del(fishes, f)
		else
			show_lose_screen()
		end
	end
end

-->8
-- helpers
function debug(text)
	if dbug then
		printh(text, "fflog")
	end
end

-->8
-- screens
function show_start_screen()
	_drw = function()
		cls()

		print("\^imini minnows", 45, 32, t() * 4 % 16)

		print("")
		print("controls:", 0, 70, 10)
		print("⬅️➡️ move left/right", 5)
		print("⬆️⬇️ move up/down", 5)

		print("press ❎ to play", 30, 120, 5 + t() * 10 % 2)
	end

	_upd = function()
		cls()
		if btnp(❎) then
			restart_game()
		end
	end
end

function restart_game()
	_upd = update_game
	_drw = draw_game
	init()
end

function draw_game()
	cls()
	map(0, 9, 0, 0)
	for f in all(fishes) do
		f:draw()
	end
	print("score: " .. score, 90, 5, 5)

	for bubble in all(bubbles) do
		bubble:draw()
	end
	pal(0, 3)
	draw_xp()
end

function update_game()
	player.dx = 0
	player.dy = 0
	if btnp(⬅️) then
		player.dx = -1 * p_speed
		player.flip = true
	end
	if btnp(➡️) then
		player.dx = 1 * p_speed
		player.flip = false
	end
	if (btnp(⬆️)) player.dy = -1 * p_speed
	if (btnp(⬇️)) player.dy = 1 * p_speed
	if flr(rnd(100)) > 95 and #fishes < max_enemies + 1 and not test_hitbox then
		x = 0
		if flr(rnd(1) * 100) % 2 == 0 then
			x = max_screen
		end
		add_new_fish()
	end

	if btnp(❎) then
		if player.xp >= player.evolution.xp_to_evolve then
			player.evolution = evolution_types[player.evolution.evolution_number + 1]
			player.xp = 0
		end
	end
	if btnp(🅾️) then
		if player.xp >= player.evolution.xp_to_evolve then
			p_speed += 0.5
			player.xp = 0
		end
	end
	if ani < 2.9 then
		ani += 0.1
	else
		ani = 1
	end

	for f in all(fishes) do
		f:update()
	end

	for bubble in all(bubbles) do
		bubble:update()
	end
end

function update_restart_screen()
	cls()
	if btnp(❎) then
		restart_game()
	end
end
function show_lose_screen()
	_drw = function()
		cls()

		print("Loser!")
		print("Score: " .. score, 5)
		print("XP to Evolve: " .. score, 5)
		print("press ❎ to play", 30, 120, 5 + t() * 10 % 2)
	end
	_upd = update_restart_screen
end

function show_win_screen()
	_drw = function()
		cls()

		print("Winner!")
		print("Score: " .. score, 5)
		print("press ❎ to play", 30, 120, 5 + t() * 10 % 2)
	end
	_upd = update_restart_screen
end

-->8
-- xp
function draw_xp()
	spr(64, 5, 5, 3, 1)

	local pct = player.xp / player.evolution.xp_to_evolve
	local lines = 22 * pct

	-- 22 lines
	for i = 1, lines do
		local li = i
		if i > 2 and i < 21 then
			li = 3
		elseif i == 21 then
			li = 4
		elseif i == 22 then
			li = 5
		end
		local l = xp_bar[li]
		local x = l.x

		if i > 2 and i < 21 then
			x += i
		end
		line(x, l.y1, x, l.y2, 9)
	end
end

xp_bar = {
	{
		x = 6,
		y1 = 8,
		y2 = 9
	},
	{
		x = 7,
		y1 = 7,
		y2 = 10
	},
	{
		x = 5,
		y1 = 6,
		y2 = 11
	},
	{
		x = 26,
		y1 = 7,
		y2 = 10
	},
	{
		x = 27,
		y1 = 8,
		y2 = 9
	}
}

-->8
-- bubbles
bubble = {
	x = 64,
	y = 128,
	x_init = 64,
	dx = 0,
	dy = .5,
	rad = 0,
	clr = 13,
	freq = 0,

	new = function(self, tbl)
		tbl = tbl or {}
		setmetatable(
			tbl, {
				__index = self
			}
		)
		tbl.x_init = tbl.x
		return tbl
	end,

	update = function(self)
		self.y -= self.dy
		self.x = self.x_init + 3 * sin(t() * self.freq)

		if self.y < 0 then
			del(bubbles, self)
			local bubble_type = rnd(bubble_types)
			add(
				bubbles, bubble_type:new({
					x = rnd(127),
					y = 127
				})
			)
		end
	end,

	draw = function(self)
		circfill(
			self.x,
			self.y,
			self.rad,
			self.clr
		)
	end
}

far_bubble = bubble:new({
	clr = 1,
	dy = 0.25,
	rad = 0
})

near_bubble = bubble:new({
	clr = 7,
	dy = .75,
	rad = 1,

	new = function(self, tbl)
		tbl = bubble.new(self, tbl)

		tbl.dy = tbl.dy + rnd(.5)
		tbl.freq = rnd(1) * .75

		return tbl
	end
})

function init_bubbles()
	bubbles = {}
	bubble_types = {
		near_bubble
		-- bubble,
		-- far_bubble
	}

	for i = 1, 2 do
		local bubble_type = rnd(bubble_types)
		add(
			bubbles, bubble_type:new({
				x = rnd(127),
				y = rnd(127)
			})
		)
	end
end

__gfx__
00000000000000000000000000000000000990000000000999999990000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000999000999009999999999000000000000000000000000000000000000000000000000000000000000000000000000
00700700000000000090000009090000909000900009909999909999000000000000000000000000000000000000000000000000000000000000000000000000
00077000000900000009000000999000090909090000999999999900000000000000000000000000000000000000000000000000000000000000000000000000
00077000000000000090000009090000090909090000099999999000000000000000000000000000000000000000000000000000000000000000000000000000
00700700000000000000000000000000909000900000999999999999000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000999000009909999999999000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000990000999000999999990000000000000000000000000000000000000000000000000000000000000000000000000
07070707000000000000000000000000000990000000000999999990000000000000000000000000000000000000000000000000000000000000000000000000
70707070000000000000000000000000000999000000009999999990000000000000000000000000000000000000000000000000000000000000000000000000
07070707000000000000000000090000009000900000009999909999000000000000000000000000000000000000000000000000000000000000000000000000
70707070000f00000099000009999000990909090999999999999999000000000000000000000000000000000000000000000000000000000000000000000000
07070707000000000000000000090000990909000099999999999999000000000000000000000000000000000000000000000000000000000000000000000000
70707070000000000000000000000000009000900999999999999999000000000000000000000000000000000000000000000000000000000000000000000000
07070707000000000000000000000000000999000000009999999999000000000000000000000000000000000000000000000000000000000000000000000000
70707070000000000000000000000000000990000000000999999990000000000000000000000000000000000000000000000000000000000000000000000000
cccccccccccccccccccccccc00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
cccccccccccccccccccccccc00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
cccccccccccccccccccccccc00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
cccccccccccccccccccccccc00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
cccccccccc1ccc1ccc1ccc1c00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
ccccccccc1c1c1ccc1c1c1c100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
cccccccc1ccc1c1c1c1c1c1c00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
ccccccccc1c1c1ccc1ccc1cc00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
11111111cc1ccc1c1c1c1c1c11111111111111110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
11111111c1c1c1c1c1c1ccc113111311111113110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
111111111c1c1c1c1c1c1c1c13311331111133110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1111111111c111c111c111c111313311311331110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
11111111111111111111111111131133133311310000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
11111111111111111111111111311331113313310000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
11111111111111111111111111333311111333110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
11111111111111111111111111133111111131110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00666666666666666666660000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
06600000000000000000066000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
06000000000000000000006000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
60000000000000000000000600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
60000000000000000000000600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
06000000000000000000006000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
06600000000000000000066000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00666666666666666666660000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
1010101010101010101010101010101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1010101010101010101010101010101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1010101010101010101010101010101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1010101010101010101010101010101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1010101010101010101010101010101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1010101010101010101010101010101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1010101010101010101010101010101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1010101010101010101010101010101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1010101010101010101010101010101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2020202020202020202020202020202000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2020202020202020202020202020202000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2020202020202020202020202020202000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2020202020202020202020202020202000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2020202020202020202020202020202000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2020202020202020202020202020202000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2020202020202020202020202020202000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2020202020202020202020202020202000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2122212221222122212221222122212200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
3132313231323132313231323132313200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
3030303030303030303030303030303000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
3030303030303030303030303030303000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
3030303030303030303030303030303000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
3030303030303030303030303030303000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
3030303030303030303030303030303000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
3033303034303033303030333430303300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
3030303030303030303030303030303000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
3030303030303030303030303030303000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__sfx__
0102000000503135531455315553185541a5431c5441f53321533265142b5132c5030050300503005030050300503005030050300503005030050300503005030050300503005030050300503005030050300503
